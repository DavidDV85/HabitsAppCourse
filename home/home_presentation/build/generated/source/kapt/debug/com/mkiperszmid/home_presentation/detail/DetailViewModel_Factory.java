// Generated by Dagger (https://dagger.dev).
package com.mkiperszmid.home_presentation.detail;

import androidx.lifecycle.SavedStateHandle;
import com.mkiperszmid.home_domain.detail.usecase.DetailUseCases;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DetailViewModel_Factory implements Factory<DetailViewModel> {
  private final Provider<SavedStateHandle> savedStateHandleProvider;

  private final Provider<DetailUseCases> detailUseCasesProvider;

  public DetailViewModel_Factory(Provider<SavedStateHandle> savedStateHandleProvider,
      Provider<DetailUseCases> detailUseCasesProvider) {
    this.savedStateHandleProvider = savedStateHandleProvider;
    this.detailUseCasesProvider = detailUseCasesProvider;
  }

  @Override
  public DetailViewModel get() {
    return newInstance(savedStateHandleProvider.get(), detailUseCasesProvider.get());
  }

  public static DetailViewModel_Factory create(Provider<SavedStateHandle> savedStateHandleProvider,
      Provider<DetailUseCases> detailUseCasesProvider) {
    return new DetailViewModel_Factory(savedStateHandleProvider, detailUseCasesProvider);
  }

  public static DetailViewModel newInstance(SavedStateHandle savedStateHandle,
      DetailUseCases detailUseCases) {
    return new DetailViewModel(savedStateHandle, detailUseCases);
  }
}
