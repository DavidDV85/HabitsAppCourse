// Generated by Dagger (https://dagger.dev).
package com.mkiperszmid.home_data.alarm;

import com.mkiperszmid.home_domain.alarm.AlarmHandler;
import com.mkiperszmid.home_domain.repository.HomeRepository;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AlarmReceiver_MembersInjector implements MembersInjector<AlarmReceiver> {
  private final Provider<HomeRepository> repositoryProvider;

  private final Provider<AlarmHandler> alarmHandlerProvider;

  public AlarmReceiver_MembersInjector(Provider<HomeRepository> repositoryProvider,
      Provider<AlarmHandler> alarmHandlerProvider) {
    this.repositoryProvider = repositoryProvider;
    this.alarmHandlerProvider = alarmHandlerProvider;
  }

  public static MembersInjector<AlarmReceiver> create(Provider<HomeRepository> repositoryProvider,
      Provider<AlarmHandler> alarmHandlerProvider) {
    return new AlarmReceiver_MembersInjector(repositoryProvider, alarmHandlerProvider);
  }

  @Override
  public void injectMembers(AlarmReceiver instance) {
    injectRepository(instance, repositoryProvider.get());
    injectAlarmHandler(instance, alarmHandlerProvider.get());
  }

  @InjectedFieldSignature("com.mkiperszmid.home_data.alarm.AlarmReceiver.repository")
  public static void injectRepository(AlarmReceiver instance, HomeRepository repository) {
    instance.repository = repository;
  }

  @InjectedFieldSignature("com.mkiperszmid.home_data.alarm.AlarmReceiver.alarmHandler")
  public static void injectAlarmHandler(AlarmReceiver instance, AlarmHandler alarmHandler) {
    instance.alarmHandler = alarmHandler;
  }
}
