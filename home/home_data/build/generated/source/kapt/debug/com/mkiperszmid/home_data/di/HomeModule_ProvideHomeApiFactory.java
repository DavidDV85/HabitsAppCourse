// Generated by Dagger (https://dagger.dev).
package com.mkiperszmid.home_data.di;

import com.mkiperszmid.home_data.remote.HomeApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class HomeModule_ProvideHomeApiFactory implements Factory<HomeApi> {
  private final Provider<OkHttpClient> clientProvider;

  public HomeModule_ProvideHomeApiFactory(Provider<OkHttpClient> clientProvider) {
    this.clientProvider = clientProvider;
  }

  @Override
  public HomeApi get() {
    return provideHomeApi(clientProvider.get());
  }

  public static HomeModule_ProvideHomeApiFactory create(Provider<OkHttpClient> clientProvider) {
    return new HomeModule_ProvideHomeApiFactory(clientProvider);
  }

  public static HomeApi provideHomeApi(OkHttpClient client) {
    return Preconditions.checkNotNullFromProvides(HomeModule.INSTANCE.provideHomeApi(client));
  }
}
