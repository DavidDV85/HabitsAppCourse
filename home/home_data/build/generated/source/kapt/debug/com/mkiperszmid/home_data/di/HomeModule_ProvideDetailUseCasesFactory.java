// Generated by Dagger (https://dagger.dev).
package com.mkiperszmid.home_data.di;

import com.mkiperszmid.home_domain.detail.usecase.DetailUseCases;
import com.mkiperszmid.home_domain.repository.HomeRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class HomeModule_ProvideDetailUseCasesFactory implements Factory<DetailUseCases> {
  private final Provider<HomeRepository> repositoryProvider;

  public HomeModule_ProvideDetailUseCasesFactory(Provider<HomeRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public DetailUseCases get() {
    return provideDetailUseCases(repositoryProvider.get());
  }

  public static HomeModule_ProvideDetailUseCasesFactory create(
      Provider<HomeRepository> repositoryProvider) {
    return new HomeModule_ProvideDetailUseCasesFactory(repositoryProvider);
  }

  public static DetailUseCases provideDetailUseCases(HomeRepository repository) {
    return Preconditions.checkNotNullFromProvides(HomeModule.INSTANCE.provideDetailUseCases(repository));
  }
}
