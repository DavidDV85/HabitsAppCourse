// Generated by Dagger (https://dagger.dev).
package com.mkiperszmid.authentication_data.di;

import com.mkiperszmid.authentication_domain.matcher.EmailMatcher;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AuthenticationModule_ProvideEmailMatcherFactory implements Factory<EmailMatcher> {
  @Override
  public EmailMatcher get() {
    return provideEmailMatcher();
  }

  public static AuthenticationModule_ProvideEmailMatcherFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static EmailMatcher provideEmailMatcher() {
    return Preconditions.checkNotNullFromProvides(AuthenticationModule.INSTANCE.provideEmailMatcher());
  }

  private static final class InstanceHolder {
    private static final AuthenticationModule_ProvideEmailMatcherFactory INSTANCE = new AuthenticationModule_ProvideEmailMatcherFactory();
  }
}
